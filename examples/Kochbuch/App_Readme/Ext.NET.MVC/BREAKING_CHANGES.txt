**************************************************************************
*                      2.4.0 BREAKING CHANGES                            *
**************************************************************************

Release Date     : 2013-12-03
Current Version  : 2.4.0
Previous Version : 2.3.1

	NONE

	If you catch any, please report in the forums: http://forums.ext.net.



**************************************************************************
*                      2.3.1 BREAKING CHANGES                            *
**************************************************************************

Release Date     : 2013-10-17
Current Version  : 2.3.1
Previous Version : 2.3.0

	NONE

	If you catch any, please report in the forums: http://forums.ext.net.



**************************************************************************
*                      2.3.0 BREAKING CHANGES                            *
**************************************************************************

Release Date     : 2013-10-11
Current Version  : 2.3.0
Previous Version : 2.2.0

1.	The ModelField's RenderMilliseconds has stopped working and will be removed in one of next releases. 
	Now serializing of dates is under JSON.NET control. 
	By default, the format to serialize dates is "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK".

	It can be changed by setting up JSON.GlobalSettings:

		JSON.GlobalSettings.DateFormatString = "yyyy'-'MM'-'dd'T'HH':'mm':'ss";

	or JSON.RequestSettings:

	    JSON.RequestSettings = new Newtonsoft.Json.JsonSerializerSettings()
        {
            DateFormatString = "yyyy'-'MM'-'dd'T'HH':'mm':'ss"
        };


	If you catch any more breaking changes, please report in the forums: http://forums.ext.net.



**************************************************************************
*                      2.2.0 BREAKING CHANGES                            *
**************************************************************************

Release Date     : 2013-04-18
Current Version  : 2.2.0
Previous Version : 2.1.1

1. The GridPagingScroller class has been replaced with the BufferedRenderer one.

	The functionality is now encapsulated within a Plugin.

	Example

	//Old
	<ext:GridPanel runat="server">
		<VerticalScroller>
			<ext:GridPagingScroller runat="server" />
		</VerticalScroller>
	</ext:GridPanel>

	//New
	<ext:GridPanel runat="server">
		<Plugins>
			<ext:BufferedRenderer runat="server" />
		</Plugins>
	</ext:GridPanel>

	For more details see the GridPanel Infinite Scrolling examples:
	http://examples.ext.net/#/search/Infinite

2. The SummaryRenderer signature has been changed. Now it is like a common Column Renderer.

   Example

   //Old
   var oldRenderer = function (value, summaryData, field) {
       /* some logic */
       return value;
   };

   <SummaryRenderer Fn="oldRenderer" />

   //New
   var newRenderer = function (value, metadata, record, rowIndex, colIndex, store, view) {
	   var summaryData = record.data, // record contains summary data
		   field = metadata.column.dataIndex;

       /* some logic */
       return value;
   };

   <SummaryRenderer Fn="newRenderer" />


   Notice that "rowIndex" will be always -1 for SummaryRenderer.

3. Now Ext.NET doesn't reset the default browser styles.

   To revert to old reset functionality, set .ResetStyles="true" on the <ext:ResourceManager>,
   or <extnet resetStyles="true" /> configuration in a Web.config as an Application wide change. 



**************************************************************************
*                      2.1.1 BREAKING CHANGES                            *
**************************************************************************

Release Date     : 2012-11-28
Current Version  : 2.1.1
Previous Version : 2.1.0

    NONE



**************************************************************************
*                      2.1.0 BREAKING CHANGES                            *
**************************************************************************

Release Date     : 2012-11-21
Current Version  : 2.1.0
Previous Version : 2.0.0

1. The AutoHeight property has been removed. 

   You might need to use the ShrinkWrap one (Both | Height (default) | Neither | Width).
   http://docs.sencha.com/ext-js/4-1/#!/api/Ext.AbstractComponent-cfg-shrinkWrap

2. Now the Paging class's Data and TotalRecords properties are serialized as "data" and "total".

   So, if you use this class to generate a response for a Store, you should change:

   <ext:JsonReader Root="Data" TotalProperty="TotalRecords" />

   to

   <ext:JsonReader Root="data" TotalProperty="total" />


   TotalProperty="total" might be removed at all because "total" is by default.



**************************************************************************
*                      2.0.x BREAKING CHANGES                            *
**************************************************************************

Release Date     : 2012-03-08
Current Version  : 2.0.0


1.   - XControl has been renamed to BaseControl
	 - StateManagedItem has been renamed to BaseItem
	 - StateManagedItemCollection has been renamed to BaseItemCollection


2.	 The IDMode="Explicit" functionality has been changed. 

	 It still causes the control ClientID to be rendered if a developer explicitly set up the control ID, 
	 but ClientID doesn't match ID anymore, it is constructed in a common way.

	 Use IDMode="Static" instead.

3.	 Window .CloseAction "Close" has been renamed to "Destroy".

	 Example

	 // Old
	 <ext:Window runat="server" CloseAction="Close" />

	 // New
	 <ext:Window runat="server" CloseAction="Destroy" />

4.	 Panel .Padding property has been renamed to .BodyPadding. 

	 Example
	 
	 // Old
	 <ext:Window runat="server" Padding="5" />
	 
	 // New
	 <ext:Window runat="server" BodyPadding="5" />

	 The .Padding property is still available, although now renders as Padding around 
	 the Component, instead of padding in the Body of the Component.

	 All previous instance of .Padding should be renamed to .BodyPadding. 

5.	 The server Panel Border property type has been changed from bool to bool?.
	 The server Panel BodyBorder property type has been changed from bool to int?.

6.	 AccordionLayout .Animate property has been renamed to .AnimatePosition. 

	 Example

	 // Old
	 <ext:AccordionLayout runat="server" Animate="false">

	 // New
	 <ext:AccordionLayout runat="server" AnimatePostion="false">

7.	 AfterRecordUpdatedEventArgs .NewValues has been renamed to .Values.
	 
	 Example

	 // Old
	 protected void Store1_RecordUpdated(object sender, AfterRecordUpdatedEventArgs e)
     {
         var company = new
         {
             Name = e.NewValues["company"],
             Price = e.NewValues["price"],
             LastChange = e.NewValues["lastChange"]
         };
     }

	 //New
	 protected void Store1_RecordUpdated(object sender, AfterRecordUpdatedEventArgs e)
     {
         var company = new
         {
             Name = e.Values["company"],
             Price = e.Values["price"],
             LastChange = e.Values["lastChange"]
         };
     }

8.	 GridPanel .StripeRows has been moved to GridView.

	 Example

	 //Old
	 <ext:GridPanel runat="server" StripeRows="true">

	 //New
	 <ext:GridPanel runat="server">
         <View>
             <ext:GridView runat="server" StripeRows="true" />
         </View>
     </ext:GridPanel>

9.	 GridPanel .TrackMouseOver has been moved to GridView and renamed to .TrackOver

	 Example

	 //Old
	 <ext:GridPanel runat="server" TrackMouseOver="true">

	 //New
	 <ext:GridPanel runat="server">
         <View>
             <ext:GridView runat="server" TrackOver="true" />
         </View>
     </ext:GridPanel>

	 Note

	 In according to ExtJS docs the default value is false. Now it's not. So, it needs to check it in the future.
	 Now is August'17.

10.	 GridPanel .AutoExpandColumn has been removed. To achieve the same effect use .Flex of Column.
	
	 Example

	 //Old
	 <ext:GridPanel runat="server" AutoExpandColumn="Company">
		 <ColumnModel runat="server">
			 <Columns>
				 <ext:Column ColumnID="Company" ... />
			 </Columns>
		 </ColumnModel>
	 </ext:GridPanel>

	 //New
	 <ext:GridPanel runat="server">
		 <ColumnModel runat="server">
			 <Columns>
				 <ext:Column Flex="1" ... />
			 </Columns>
		 </ColumnModel>
	 </ext:GridPanel>

11.  RowSelectionModel .SingleSelect has been removed.

	 Now use the public property .Mode which is defined in AbstractSelectionModel. The possible values are Single (default), Simple and Multi.
	 
	 RowSelectionModel and CheckboxSelectionModel inherit from AbstractSelectionModel.

	 The default value of .SingleSelect is false: so, the equivalent is Mode="Multi" which is not default and should be set up explicitly.

	 Example 1

	 //Old
	 <ext:RowSelectionModel runat="server">

	 //New
	 <ext:RowSelectionModel runat="server" Mode="Multi">

	 Example 2

	 //Old
	 <ext:RowSelectionModel runat="server" SinlgeSelect="true">

	 //New
	 <ext:RowSelectionModel runat="server" Mode="Single">

	 Example 3

	 //Old
	 <ext:CheckboxSelectionModel runat="server" SinlgeSelect="false">

	 //New
	 <ext:CheckboxSelectionModel runat="server" Mode="Multi">

12.  Column .ColumnID has been renamed to .ID

	 Now Column is a component and registered in ComponentMgr (http://www.sencha.com/forum/showthread.php?133562)

	 Example

	 //Old
	 <ext:Column ColumnID="company">

	 //New
	 <ext:Column ID="company" runat="server">

13.  Column .Header has been replaced with .Text
	 The JavaScript config option .header can still work, but it's deprecated.

	 Example 1

	 //Old
	 <ext:Column Header="Company">

	 //New
	 <ext:Column Text="Company">

	 Example 2

	 //Old
	 Column c = new Column()
	 {
		 Header = "Company"
	 };

	 //New
	 Column c = new Column()
	 {
		 Text = "Company"
	 };

14.1 RecordField has been renamed to ModelField and must be defined in Model.

	 Reader .Fields has been removed.

     Example

	 //Old
	 <ext:Store runat="server">
         <Model>
             <ext:JsonReader>
                 <Fields>
                     <ext:RecordField Name="company" />
                 </Fields>
             </ext:JsonReader>
         </Model>
     </ext:Store>

	 //New
	 <ext:Store runat="server">
         <Model>
             <ext:Model runat="server">
                 <Fields>
                     <ext:ModelField Name="company" />
                 </Fields>
             </ext:Model>
         </Model>
     </ext:Store>

14.2 Use Validations instead .AllowBlank property.

15.  The server HttpProxy class has been renamed to AjaxProxy.

	 Example

	 //Old
	 <ext:HttpProxy Url="Some.url" />

	 //New
	 <ext:AjaxProxy Url="Some.url" />

	 And there is no .Method
	 Use ActionMethods

	 Example
	 
	 //Old
	 <ext:HttpProxy Url="some.url" Method="POST">

	 //New
	 <ext:AjaxProxy Url="some.url">
		<ActionMethods READ="POST" />
	 </ext:AjaxProxy>


16.  If Store .Proxy is specified, then Reader should be specified for that Proxy.

	 Example

	 //Old
	 <ext:Store runat="server">
         <Proxy>
             <ext:HttpProxy Url="Some.url" />
         </Proxy>
         <Reader>
             <ext:JsonReader Root="Data" TotalProperty="TotalRecords">
                 <Fields>
                     <ext:RecordField Name="Common" />                   
                 </Fields>
             </ext:JsonReader>
         </Reader>
     </ext:Store>

	 //New
	 <ext:Store runat="server">
         <Proxy>
             <ext:AjaxProxy Url="Some.url">
                 <Reader>
                     <ext:JsonReader Root="Data" TotalProperty="TotalRecords" />
                 </Reader>
             </ext:AjaxProxy>
         </Proxy>
         <Model>
             <ext:Model runat="server">
                 <Fields>
                     <ext:ModelField Name="Company" />
                 </Fields>
             </ext:Model>
         </Model>
     </ext:Store>

17.  PagingToolbar .PageSize has been removed. 
     Store .PageSize should be used instead.

	 Example

	 //Old
	 <ext:PagingToolbar runat="server" PageSize="10">

	 //New
	 <ext:Store runat="server" PageSize="10">

18.  ColumnModel .SetHidden() has been removed.

	 Use Column .Hidden

	 Example

	 //Old
	 this.GridPanel1.ColumnModel.SetHidden(2, true);

	 //New
	 this.GridPanel1.ColumnModel.Columns[2].Hidden = true;

19.  ColumnModel .SetColumnWidth() has been removed.

	 Use Column .SetWidth()

	 Example

	 //Old
	 this.GridPanel1.ColumnModel.SetColumnWidth(1, 100);

	 //New
	 this.GridPanel1.ColumnModel.Columns[1].SetWidth(100);

20.  ColumnModel SetColumnHeader method has been removed.

	 Use Column Text property.

	 Example

	 //Old
	 this.GridPanel1.ColumnModel.SetColumnHeader(0, "New label");

	 //New
	 this.GridPanel1.ColumnModel.Columns[0].Text = "New label";

21.  ColumnModel SetRenderer method has been removed.

	 Use Column Renderer property.

	 Example

	 //Old
	 Renderer r = new Renderer();
	 r.Fn = "change";
	 this.GridPanel1.ColumnModel.SetRenderer(2, r);

	 //New
	 Renderer r = new Renderer();
	 r.Fn = "change";        
	 this.GridPanel1.ColumnModel.Columns[2].Renderer = r;

22.  JavaScript: MixedCollection .itemAt() has been removed. 
	 Use .getAt().

	 Example

	 //Old
	 Panel1.items.itemAt(0);

	 //New
	 Panel1.items.getAt(0);

23.  GroupingView has been removed and replaced with Grouping feauture.

	Its GroupTextTpl property has been removed. To set up it please use the GroupHeaderTplString or GroupHeaderTpl (XTemplate type) properties.

	 Example

	 //Old
	 <ext:GridPanel runat="server">
		 <View>
			 <ext:GroupingView  
				 HideGroupedColumn="true"
				 runat="server" 
				 GroupTextTpl='{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Items" : "Item"]})'>
			 </ext:GroupingView>
		 </View>            
	 </ext:GridPanel>

	 //New
	 <ext:GridPanel runat="server">
	     <View>
             <ext:GridView runat="server" />
         </View>
         <Features>
             <ext:Grouping 
                 runat="server" 
                 HideGroupedHeader="true" 
                 GroupHeaderTplString='{text} ({[values.rows.length]} {[values.rows.length > 1 ? "Items" : "Item"]})' />
         </Features>
	 </ext:GridPanel>
	 
24.  GridView .ForceFit has been moved to GridPanel.
	 
25.  GridView .EnableRowBody has been removed and replaced with RowBody feature.

	 Example
	 
	 //Old
	 <ext:GridPanel runat="server">
         <View>
             <ext:GridView 
                 runat="server"
                 EnableRowBody="true">
                 <GetRowClass Handler="var d = record.data;
                                         rowParams.body = 'some html';" />
             </ext:GridView>
         </View>            
     </ext:GridPanel> 

	 //New
	 <ext:GridPanel runat="server">
	     <View>
		     <ext:GridView runat="server" />
		  </View>
          <Features>
			 <ext:RowBody runat="server">
                 <GetAdditionalData 
                     Handler="var d = data; 
                              orig.rowBody = 'some html';" />
             </ext:RowBody>
         </Features>
	 </ext:GridPanel>

26.  GridPanel Command and GroupCommand listeners has been moved to Column listeners.

27.  Store .SortInfo has been removed.
	 Use Store .Sorters

	 Example

	 //Old
	 <SortInfo Field="Common" Direction="ASC" />

	 //New
	 <Sorters>
         <ext:DataSorter Property="Common" Direction="ASC" />
     </Sorters> 

28.  Store .SerializationMode has been removed.
	 Use ModelField .IsComplex 
	 or 
	 Store .Data instead of .DataSource equals SerializationMode="Complex".

29.  To get Column .Editor working set up CellEditing or RowEditing plugin for GridPanel.

	 GridPanel "editing" events are moved to CellEditing/RowEditing.

	 Use the editing plugin client startEdit method instead of the GridPanel startEditing one.
	 
	 Example

	 <ext:GridPanel runat="server">
         <Plugins>
             <ext:CellEditing runat="server" />
         </Plugins>
     </ext:GridPanel>

30.  Signature of ModelField .Convert has been changed.
	 The first argument is a record, not an array of values.

31.  Store .BaseParams has been renamed to .Parameters
     Parameter has been renamed to StoreParameter

32.  RowSelectionModel RowSelect and RowDeselect Listener and DirectEvent has been renamed to
     Select and Deselect

33.  RowSelectionModel JavaScript .getSelected() has been removed.
	 Use .getSelection().

34.  "Layout" type controls and its satellites have been removed.

	 Use the Layout and LayoutConfig properties of a container.

	 This change affects all the following Layout classes and its satellites:

	 - <ext:AbsoluteLayout>
	 - <ext:Anchor>
	 - <ext:AccordionLayout>
	 - <ext:AnchorLayout>
	 - <ext:BorderLayout>
	 - <ext:BoxLayout>
	 - <ext:CardLayout>
	 - <ext:CenterLayout> <-- see item #73
	 - <ext:ColumnLayout>
	 - <ext:LayoutColumn>
	 - <ext:FitLayout>
	 - <ext:FormLayout>
	 - <ext:HBoxLayout>
	 - <ext:BoxItem>
	 - <ext:RowLayout>
	 - <ext:LayoutRow>
	 - <ext:TableLayout>
	 - <ext:Cell>
	 - <ext:VBoxLayout>


35.  GridFilters plugin became a feature and should be defined in GridPanel .Features, not .Plugins.

36.  ScriptTagProxy has been renamed to JsonPProxy

37.  BufferView has been removed. Use Store .Buffered property.

38.  GridView .ScrollOffset has been moved to GridPanel.

39.  Panel .Header has been renamed to .PreventHeader.
     
	 Example

	 //Old
	 <ext:Panel runat="server" Header="false">

	 //New
	 <ext:Panel runat="server" PreventHeader="true">

40.  Now ExtJS no longer overrides or extends native JavaScript classes.
	 
	 Incudes Array, Date, Function, Number and String. Please use Ext.* Singletons, 

	 http://docs.sencha.com/ext-js/4-2/#!/api/Ext.String

	 The createDelegate function has been renamed to bind.

	 Example 1

	 //Old
	 String.format(string, value1, value2);

	 //New
	 Ext.String.format(string, value1, value2);

	 Example 2

	 //Old
	 var f = function () { };
	 f.defer(10);

	 //New
	 Ext.Function.defer(f, 10);

	 Example 3

	 //Old
	 var f = function () {
		alert(this);
	 };
	 f.createDelegate('Hello!')();

	 //New	
	 Ext.Function.bind(f, 'Hello!')();

41.  Store .OnRefreshData has been renamed to .OnReadData
 
42.  LockingGridView has been removed.
	 Use Column .Locked property.

43.  GridView .MarkDirty has been removed.

44.  The RowEditor plugin has been removed.

	 Use the RowEditing plugin.

	 Use its Edit event instead of the RowEditor AfterEdit one.

	 Use its SaveBtnText property instead of the RowEditor SaveText.

45.  XMLReader .IDPath has been removed.
     Use .IDProperty

46.  ComboBox .Template has been removed. Use ComboBox ListConfig.Tpl and ListConfig.ItemTpl.

     Example

	 //Old
     <ext:ComboBox runat=server>
         <Template runat="server">
             <Html>
                 
             </Html>
         </Template>
     </ext:ComboBox>

	 //New
     <ext:ComboBox runat="server">
         <ListConfig>
             <Tpl runat="server">
                 <Html>
                     
                 </Html>
             </Tpl>
             <ItemTpl runat="server">
                 <Html>
                     
                 </Html>
             </ItemTpl>
         </ListConfig>
     </ext:ComboBox>

47.  ComboBox .LoadingText has been removed. Use ComboBox ListConfig.LoadingText.

	 Example

	 //Old
	 <ext:ComboBox runat=server LoadingText="Searching..." />

	 //New
	 <ext:ComboBox runat="server">
         <ListConfig LoadingText="Searching..." />
     </ext:ComboBox>

48.  ComboBox .ItemSelector has been removed. Use ComboBox ListConfig.ItemSelector.

	 Example

	 //Old
	 <ext:ComboBox runat=server ItemSelector="div.my-item" />

	 //New
	 <ext:ComboBox runat="server">
        <ListConfig ItemSelector="div.my-item" />
     </ext:ComboBox>

49.  ComboBox Select listener. An array of records is passed to a listener, not a single record.

50.  The ComboBox server SelectedIndex and SelectedItem properties have been removed.

	 Use the SelectedItems property.

	 Example

	 //Old
	 <ext:ComboBox runat="server" SelectedIndex="1">

	 //New
	 <ext:ComboBox runat="server">
 		 <SelectedItems> 
	 		 <ext:ListItem Index="0" />
 	     </SelectedItems>   
 	 </ext:ComboBox>

51.  Store server .UpdateRecordField() has been removed.

	 Example

	 //Old
	 Store1.UpdateRecordField(0, "company", (object)"New Company");

	 //New
	 Store1.GetAt(0).Set("company", (object)"New Company");

52.  ComboBox client .triggers collection has been removed. Use .getTrigger(index).

	 Example
	
	 //Old
	 ComboBox1.triggers[0]

	 //New
	 ComboBox.getTrigger(0)

53.  CompositeField hasb been removed and replaced with FieldContainer.
     Note that default Layout of FieldContainer is "autocontainer", not "hbox".

	 Example

	 //Old
	 <ext:CompositeField runat="server">
         <Items>
             <ext:TextField runat="server" Flex="1" />
             <ext:TextField runat="server" Flex="1" />
         </Items>
     </ext:CompositeField>

	 //New
	 <ext:FieldContainer runat="server" Layout="HBoxLayout">
         <Items>
             <ext:TextField runat="server" Flex="1" />
             <ext:TextField runat="server" Flex="1" />
         </Items>
     </ext:FieldContainer>

54.  Menu ItemClick has been renamed to Click.

55.  DropDownField .ComponentAlign has been renamed to PickerAlign.

56.  DropDownField new property .MatchFieldWidth has true value by default.
	 So, .Width of a Component is ignored.
	 To avoid it set up MatchFieldWidth="false".

57.  The TreeNode class has been renamed to the Node one. The Nodes property has been renamed to the Children one.
	
	 A Node JavaScript instance has the client "data" property instead of the "attributes" one.

	 To get a custom attribute (CustomAttributes) appeared in the "data" property, you should add a respective ModelField.

	 A ModelField can be added to the TreePanel's Fields collection or to the Fields collection of the TreeStore's Model.

	 The ModelField's Name should match the custom attribute's Name.

58.  TreePanel DefaultSelectionModel and MultiSelectionModel has been renamed to TreeSelectionModel.
     Use .Mode to set up selection mode.

59.  FieldUploadField FileSelected event has been removed. Use Change.

60.  Form fields .DataIndex has been renamed to .Name.

61.  PagingToolbar .PageIndex has been removed. Use Store .LoadPage(index) or set up a respective "start" parameter.
	 If you need to get a current page index on server, please send a Store's JavaScript currentPage property as a request's parameter, see:
	 http://forums.ext.net/showthread.php?26805&p=118931&viewfull=1#post118931

62.  MultiSelect .Legend has been removed. Wrap MultiSelect in FieldSet or use ListTitle.

63.  Use NumberField instead of SpinnerField.

64.  Container .LabelAlign, .LabelPad, .LabelSeparator, .LabelStyle, .LabelWidth has been removed.
	 Use the same properties of container items.
	
	 Note that you can set these properties for all items using Container Defaults or FormPanel FieldDefaults.

65.  ColorPalette has been renamed to ColorPicker.

66.  ComboBox Mode has need renamed to QueryMode.

67.  BottomTitle has been removed. Use Panel HeaderPosition.

68.  DataView OverClass has been renamed to OverCls.
	 To set up over class for items, use OverItemCls.

69.  MenuTextItem has been removed. You can use, for example, Label or DisplayField.

70.  Element .AddClass(), .RemoveClass(), .ToogleClass() has been renamed to, respectively, 
	 .AddCls(), .RemoveCls(), .ToogleCls(). Their client side pairs as well.

71.  The Panel's AutoLoad property has been removed. Use the Loader one. It has the ComponentLoader type.

	 The LoadConfig class hass been removed. Use the ComponentLoader one.
	
	 71.1. Use DisableCaching instead of NoCache.
	 71.2. Use Mode="Html" instead of Mode="Merge". It's by default.
	 71.3. Use LoadMask.ShowMask instead of ShowMask.
	 71.4. Use LoadMask.Msg instead of MaskMsg.
	 71.5. Use Loader BeforeLoad and Load events instead of Panel BeforeUpdate and Update.
	 71.6. Use AutoLoad instead of ManuallyTriggered. A replacement of ManuallyTriggered="true" is AutoLoad="false".

72.  TabPanel ResizeTabs has been renamed to Resizable.

73.  CenterLayout has been removed. Please us a combination of HBoxLayout and VBoxLayout.

74.  ToolbarReorderer plugin has been renamed to BoxReorderer.

75.  The CommandColumn ButtonAlign property has been removed.

	 Use the Pack one. The available options are Start (default) | Center | End.

76.  TreeNode has been renamed to Node. Node has no client side getUI method.
	 To get a node's HTML element, use the view's getNode method.

	 Example

	 //New
	 tree.getView().getNode(node)

77.  TreeNode has been renamed to Node. Its Draggable property has be renamed to AllowDrag.

78.  TreeNode has been renamed to Node. Leaf nodes requires Leaf="true" to be set up.

79.  Tool Qtip has been renamed to Tooltip.

80.  TreePanel client side initChildren method has been removed. Use the setRootNode method.

81.  The TreePanel's drag&drop related properties have been removed: EnableDD, EnableDrag, EnableDrop, AllowLeafDrop, DDAppendOnly, DDGroup, DDScroll, ContainerScroll.

	 Configure a TreeViewDragDrop plugin for a TreePanel's View.
	 http://examples.ext.net/#/TreePanel/Basic/Reorder_Nodes/
	 http://docs.sencha.com/ext-js/4-1/#!/api/Ext.tree.plugin.TreeViewDragDrop

	 BeforeDrop and Drop events are available in a TreeView.

82.  The GridPanel's EnableHdMenu property has been removed.

	 Configure the MenuDisabled property of its columns.	

83.  AsyncTreeNode class has been removed. Use a Node class instead. 

     If a Node is not a leaf and doesn't contain any children, it will initiate a load request on expand.

84.  TreeNode has been renamed to Node. Its cliet side ensureVisible method has been removed.
     Use TreePanel View focusRow method.

	 Example

	 //New
	 TreePanel.getView().focusRow(node)

85.  ModelField Convert. Now the first argument is a record instance, not just an array.

86.  BottomTitle plugin has been removed. Use Panel HeaderPosition="Bottom".

87.  BoxComponentBase and BoxComponent classes have been removed. Use ComponentBase and Component ones instead.

	 The AutoWidth propety has been removed. You might need to use the ShrinkWrap one.
	 http://docs.sencha.com/ext-js/4-1/#!/api/Ext.AbstractComponent-cfg-shrinkWrap

88.  PanelBase KeyMap has been removed. Though we are planning to implement it in one of next releases.

89.  Calendar: Event and EventCollection classes has been renamed to EventModel and EventModelCollection.

90.  ResourceManager Namespace is "App" by default. Any widget will share own client id in that namespace.

	 Example (client side)
	
	 //Old
	 TextField1.setValue("Hello World!");

	 //New
	 App.TextField1.setValue("Hello World!");

	 or

	 //New
	 #{TextField1}.setValue("Hello World!");

	 You can set up an empty Namespace to get the same as it's in Ext.NET v1.

	 Example

	 <ext:ResourceManager runat="server" Namespace="" />

91.  There is no ViewState on page by default, i.e. ResourceManager DisableViewState="true" by default.

	 To get it back, set .DisableViewState="false" for ResourceManager.
	
92.  ColumnLayout doesn't support FitHeight and Split options. 

	 Please use HBox layout if you need this functionality.

93.  The type of TextFieldBase Validator has been changed to JFunction (was string).

	 Example

	 //Old
	 <ext:TextField runat="server" Validator="myValidator">

	 //New
	 <ext:TextField runat="server">
		 <Validator Fn="myValidator" />
	 </ext:TextField>

94.  GridPanel Reload method doesn't reload its Store, don't use it.

	 Use Store Reload method.

95.  The TreePanel ContainerScroll property has been removed. 
    
	 If you need its functionality you should set up the same property for DragZone.

96.  The TreePanel client side getNodeById has been removed. 

     You should deal with TreeStore.

	 Example

	 //Old
	 tree.getNodeById("nodeId")

	 //New
	 tree.getStore().getNodeById("nodeId")

97.  The TreePanel server side methods - SetNodeText, SetNodeCls, SetNodeHref, SetNodeIcon, SetNodeIconCls, SetNodeId, SetNodeText, SetNodeTooltip - have been removed. 

     Now you should get a node proxy calling the TreePanel GetNodeById method, then call a respective method of that node proxy.

	 Example

	 //Old
	 TreePanel1.SetNodeText("nodeId", "new text")

	 //New
	 TreePanel1.GetNodeById("nodeId").Set("text", "new text")

98.  The server Resizable class has been renamed to Resizer.

	 Its Draggable property has been removed. For dragging functionality use the common drag&drop components.

99.  The TreePanel server SelectNode method has been removed.

	 Use the Select method of its selection model.

	 Example

	 //Old
	 TreePanel1.SelectNode("nodeId");

	 //New
	 <ext:TreePanel runat="server">
		 <SelectionModel>
			 <ext:TreeSelectionModel runat="server" />
		 </SelectionModel>
	 </ext:TreePanel>

	 TreePanel1.GetSelectionModel().Select("nodeId");

100. The Store server UpdateProxy property has been removed. The server HttpWriteProxy class has been removed.

	 Now you can configure AjaxProxy API setting Url for Sync (save) action.
	 http://examples.ext.net/#/GridPanel/Saving_Variations/WebService/

	 Or passing the action name as a parameter and analyze that parameter on server.
	 http://examples.ext.net/#/GridPanel/Saving_Variations/HttpHandler/

101. The TreeNode server class has been renamed to the Node one. 
	
	 Now it is consider just as a record and doesn't represent UI. Respectively, its UI events like Click, ContextMenu, DblClick, etc. have been removed.

	 Use the TreePanel ItemClick, ItemContextMenu, ItemDbl Click events.

102. The EditableGrid plugin has been removed.

     Use the ComponentColumn.
	 http://examples.ext.net/#/GridPanel/ComponentColumn/Editor/

103. The server Column Css property has been removed. 

	 Use the TdCls property.

	 Example

	 //Old
	 <ext:Column ... Css="color:red;" />

	 //New
	 <ext:Column ... TdCls="my-column" />

	 <style type="text/css">
		 .my-column {
			 color: red;
		 }
	 </style>

104. The Store LoadException event has been removed.

	 Use the Exception ove.

105. The server ComboBox properties to configure its dropdown list - ListAlign, ListClass, ListEmptyText, ListWidth, 
	 MinListWidth, ItemSelector, Shadow, Resizable, LoadingText, etc  - should be set up in the ComboBox ListConfig proeprty.

	 Example

	 //Old
	 <ext:ComboBox 
		 runat="server" 
		 ListClass="my-list" 
		 LoadingText="my loading text" 
		 ListWidth="200">

	 //New
	 <ext:ComboBox runat="server">
		 <ListConfig 
			 runat="server" 
			 Cls="my-list" 
			 LoadingText="my loading text"
			 Width="200" />
	 </ext:ComboBox>

106. The server NumberField AllowNegative property has been removed. Now just set up MinValue to 0.

	 Example

	 //Old
	 <ext:NumberField runat="server" AllowNegative="false" />

	 //New
	 <ext:NumberField runat="server" MinValue="0" />

107. Using the Toolbar Content now causes an "not supported" exception. It should not be used in Ext.NET v1 as well.

108. The server Store Restful property has been removed. Use RestProxy.
	 http://examples.ext.net/#/GridPanel/Restful/Overview/

109. The server DesktopWindow class and server DesktopModule WindowId property have been removed. 

	 Use the DesktopModule Window property and a common Window class instance.

110. The server Column Editable property has been removed.

	 Return false from a  GridPanel or editing plugin BeforeEdit listener to prevent editing.

111. The server Window InitCenter property has been removed as redundant. The Window is rendered in the center by default.

112. The server GridPanel AutoExpandMin and AutoExpandMax properties have been removed.

	 Use the Column MaxWidth and MinWidth properties.

113. The server GridPanel LoadMask property has been removed. 

	 Use the respective properties - LoadMask (true by default), LoadingText, etc. -  of GridView.

114. The server ColumnModel class has been removed.

	 Use the GridHeaderContainer class.

	 Its Sortable property has the same meaning as the DefaultSortable one previously.

115. The request utility functions like IsIE, IsGecko, IsChrome, IsWindows, etc. has been moved to RequestManager.

	 Example

	 //Old
	 if (X.IsIE)

	 //New
	 //If (RequestManager.IsIE)

116. The server AjaxStoreResult class has been renamed to StoreResult.

117. The TextField Change event is now fired when a user is typing, not just on blur.

118. The GridPanel's "Row..." events like RowClick, RowDblClick, RowContextMenu, etc. 
	 have been renamed to ItemClick, ItemDblCLick, ItemContextMenu, etc.

	 The GridPanel's mouse events - MouseDown, MouseOut, MouseOver, MouseUp - have been removed. 
	 The new events - ItemMouseDown, ItemMouseEnter, ItemMouseLeave, ItemMouseUp. They fires in the context of a row.
	 If you need listen mouse events in the context of a GridPanel itself, please use its events which names contain "...ContainerMouse...".

119. The Server AjaxFormResult has been renamed to FormPanelResult.

120. The server Store UseIdCOnfirmation property and the ConfirmationList property have been removed.

	 Generally, the Store saving mechanism has been refactored a lot. Please investigate the online examples in the Examples Explorer.

	 See also
	 http://forums.ext.net/showthread.php?18186

121. The server EditorCollection Editor property has been removed.

	 Use its Primary property or access by [0] index.

122. The Stateful property default value has beed changed to "false". Previously was true.

	 So, you need to set up it to true explicitly if you need the stateful functionality.

123. The server Menu EnableScrolling property has been removed. Now you just need to set up Height. 
	
	 If the combined menu items height exceeds the Menu height, the scrolling arrows will appear.

124. The server Menu SubMenuAlign property has been removed.

	 Use its DefaultAlign property or the MenuItem MenuAlign property.

125. The server GridView HeaderRows proeprty has been removed.

	 Use the Column HeaderItems property.
	 http://examples.ext.net/#/GridPanel/MultiHeader/Overview/

126. The Checkbox's Check event has been removed. Use the Change one.

127. A RowLayout has been removed. Use an AnchorLayout or a VBoxLayout instead.
	 http://examples.ext.net/#/search/AnchorLayout
	 http://examples.ext.net/#/search/VBoxLayout

128. The ColumnBase's Fixed property has been removed. Use its Resizable property (defaults to true).

129. The field's Valid and Invalid events have been removed. Use its ValidityChange event.

130. Now the ColumnBase class is a base class for all GridPanel columns. Previosly it was the Column class.

	 Example

	 //Old
	 Column c = new BooleanColumn();

	 //New
	 ColumnBase c = new BooleanColumn();

131. The FormPanel's:
		 - MonitorValid and MonitorPoll properties,
		 - ClientValidation event, 
		 - StartMonitoring and StopMonitoring methods 
	 have been removed.

	 Use, respectively, the following things:
		 - PollForChanges and PollInterval properties,
		 - ValidityChange event,
		 - StartPolling and StopPolling methods.

132. A field's ValidationEvent and ValidationDelay properties have been removed.

	 Use the CheckChangeEvents and CheckChangeBuffer properties.

133. The FilterCondition class has been refactored.

		 - FilterType property has been renamed to Type,
		 - Name property has been renamed to Field,
		 - ValueList has been renamed to List,
		 - ValueAs* (where * is a type) properties has been replaced with a single generic Value<type> property.

134. The Panel's Failure event has been removed. Use the Loader's Exception event.

135. The DropPoint enum's members have been renamed: Above => Before, Below => After.

136. The GridView's HeaderGroupRows property has been removed.
	 
	 The HeaderGroupRow and HeaderGroupColumn classes have been removed.

	 Now the Column class has the Columns collection property to organize grouping.
	 http://examples.ext.net/#/GridPanel/Miscellaneous/ColumnHeaderGroup/

137. The TreeGrid class has been removed. Now a common TreePanel suppors columns.
     http://examples.ext.net/#/TreePanel/Advanced/TreeGrid/

138. The Component's Ref property has been removed.

	 Please use the AbstractContainer's down method.
	 http://docs.sencha.com/ext-js/4-1/#!/api/Ext.container.AbstractContainer-method-down

	 Example

	 //New
	 <ext:Panel ID="Panel1" runat="server">
		 <TopBar>
			 <ext:Toolbar runat="server">
				 <Items>
					 <ext:Button runat="server" ItemID="TestButton" Text="Test Button" />
				 </Items>
			 </ext:Toolbar>
		 </TopBar>
	 </ext:Panel>

	 JavaScript code to access the Button can look:

	 var btn = App.Panel1.down("#TestButton");

139. The ComponentMenuItem class has been removed.
	
     Now any component can be added to directly to a Menu's Items collection.
	 http://examples.ext.net/#/Toolbar/Menu/Controls_In_Menu/

140. The TreeNode class has been removed. Please use the Node one.
	
	 There is no Disabled property anymore and no a direct substitution.

	 You can set up a custom attribute for a Node and configure a View's GetRowClass handler. Here is a related discussion on Sencha forum.
	 http://www.sencha.com/forum/showthread.php?138173

141. The TabPanel's EnableTabScroll property has been removed. There is no need in this property anymore.

	 Now the scroll tools will appear and disappear automatically regardless any property. 

142. The TreeLoader has been removed.

	 See the TreePanel Loaders examples in the Examples Exmplorers.

143. The FormPanelBase's FileUpload property has been removed. There is no need in this property anymore.

	 Now a FormPanel checks itself it contains a FileUploadField or not. More details are here.
	 http://docs.sencha.com/ext-js/4-1/#!/api/Ext.form.Basic-method-hasUpload

144. The Store's RefreshAfterSaving property has been removed.

	 A Store reload is not required anymore in most cases because in a response you have to return data (new ids, etc). Look at this example.
	 http://examples.ext.net/#/GridPanel/Update/AutoSave/

	 If you still need to reload a Store after a sync request then configure a success handler.
	
	 Example

	 App.Store1.sync({
		 success : function () {
			 App.Store1.reload();
		 }
	 });

145. Now CurrentCulture (instead of CurrentUICulture in Ext.NET v1) is used as a default value for the ResourceManager's Locale property.

	 It can be set up, for example, by the following ways.

	 Example 1

	 <%@ Page Language="C#" Culture="de-DE" %>


	 Example 2

	 protected void Page_Load(object sender, EventArgs e)
	 {
		 System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("it-IT");
	 }

146. The CheckboxSelectionModel's ColumnPosition property has been removed. Use the InjectCheckbox one.

	 Example 1

	 this.CheckboxSelectionModel1.InjectCheckbox = "2";

	 Example 2

	 <ext:CheckboxSelectionModel1 runat="server" InjectCheckbox="last" />

147. The CheckboxSelectionModel's HideCheckAll property has been removed. Use the ShowHeaderCheckbox one.

	 If HideCheckAll was true, you shoud set up ShowHeaderCheckbox to false.

148. Now the ComboBoxBase's TriggerAction is All by default. Previously, it was Query.

149. The TabPanel's HideTabStripItem and UnhideTabStripItem server methods and the hideTabStripItem and unhideTabStripItem JavaScript methods have been removed.

	 Now each item in a TabPanel has an instance of Ext.tab.Tab which you can show/hide.

	 JavaScript
	 App.TabPanel1.items.get(0).tab.hide();
	 App.TabPanel1.items.get(0).tab.show();

	 App.TabPanelItem.tab.hide();
	 App.TabPanelItem.tab.show();


	 C#
	 TabPanel1.Call("items.get(0).tab.hide");
	 TabPanel1.Call("items.get(0).tab.show");

	 TabPanelItem.Call("tab.hide");
	 TabPanelItem.Call("tab.show");

150. The PanelBase's LoadMask property has been removed.

     Configure the LoadMask property of the Loader class.

	 Example

	 <ext:Panel runat="server">
		 <Loader runat="server" Mode="Frame" Url="http://ext.net">
			 <LoadMask ShowMask="true" />
		 </Loader>
	 </ext:Panel>

151. The GridPanelBase's SaveMask property has been removed.

	 To show a mask, set up the following Store's BeforeSync listener.

	 Ext.net.Mask.show({
		 el: App.GridPanel1.body,
		 msg: "Saving"
	 });

	 To hide a mask, set up the following Store's Write and Exception listener.

	 Ext.net.Mask.hide();

152. The TabPanelBase's LayoutOnTabChange property has been removed.

     It should not be required anymore. But in some cases HideMode="Offsets" for tabs might help to get better layouting.

153. The ContainerBase's MonitorResize property has been removed. It is not required anymore.

154. The GridPanel's HeaderMouseDown and HeaderDblClick events have been removed. 

     Its HeaderClick and HeaderContextMenu have been moved to ColumnModel/GridHeaderContainer.

155. Now the FieldSet class inherits from the AbstractContainer one, not from the Panel one as it is in Ext.NET v1.

     So, FieldSet lost "Panel" functionality. 
	 
	 In particular, it doesn't have the Icon property.

	 This examples demonstrates an approach to put an icon into a FieldSet's title.
	 http://forums.ext.net/showthread.php?19678&p=84786&viewfull=1#post84786

156. The Store's DirectEventConfig has been removed.

	 Use the PageProxy's RequestConfig property instead to apply required options for the actions which are done via a PageProxy.

	 If you use, for example, the GridPanel's submitData JavaScript method you might need to pass a respective config directly to this method as the second parameter.
	 http://examples.ext.net/#/GridPanel/Miscellaneous/Export_Data_Ajax/

	 Example
	 grid.submitData(false, { isUpload: true });

157. The skipIdForNewRecords option has been renamed to skipIdForPhantomRecords.

158. The type of the ComboBoxBase's and MultiSelectBase's SelectedItems property has been changed to the ListItemCollection class.

     There is no ToJsonArray method in the ListItemCollection class. Use this code if needed.
     JSON.Serialize(ComboBox1.SelectedItems);

     There are also no IndexesToJsonArray and ValuesToJsonArray methods. 

     You can implement them yourself, they are simple. Here is an example of ValuesToJsonArray implementation.
     http://forums.ext.net/showthread.php?23117&p=100947&viewfull=1#post100947

159. The Panel client side methods - getTool, getBottomToolbar, getTopToolbar - have be removed. 

	 Here is a possible substitution. Thanks to a forum member @jchau.
	 http://forums.ext.net/showthread.php?23491

160. The StoreRefreshDataEventArgs class has been renamed to StoreReadDataEventArgs.

161. The ResourceManagerProxy control has been removed as it is no longer required. 
	 
	 If an instance of the ResrouceManager in code-behind, please use ResourceManager.GetInstance(). 

162. The ButtonBase's NavigateUrl and Target properties have been replaced with the Href and HrefTarget ones.

163. The CompositeField has the ReadOnly property in v1. The v2 FieldContainer doesn't have such a property.

	 Please set up the following for a FieldContainer: 
	 <FieldDefaults ReadOnly="true" />

164. The TextFieldBase's Truncate property has been removed. Please use the EnforceMaxLength one instead. 
	 
	 It is also false by default. If Truncate is explicitly set up to true, then you should also set EnforceMaxLength to true.

165. The Image class doesn't have field-related properties anymore like FieldLabel, LabelStyle, LabelWidth, etc.
	 
	 You can wrap an Image in a FieldContainer control and set up those properties for the FieldContainer.

166. The StoreBase's AddRecord and InsertRecord method have been removed. Please use the Add and Insert methods.

167. The MultiCombo's UpdateSelection method has been removed. Please use the UpdateSelectedItems one instead.

168. The TabStripItem class has been renamed to Tab. Its Title property has been renamed to Text.

169. The BoxComponentBase's TabTip property has been removed. Please use the TabConfig's ToolTip of the AbstractPanel class.

	 Example

	 //Old
	 <ext:Panel runat="server" TabTip="tooltip" />

	 //New
	 <ext:Panel runat="server">
		 <TabConfig runat="server" ToolTip="tooltip" />
	 </ext:Panel>

170. The GridPanelBase's SelectionMemory property is a bool type now instead of SelectionModeMemory enum.

171. The GridPanel's client side getColumnModel method has been removed. To access columns, please use a GridPanel's headerCt.

	 A headerCt is an instance of the Ext.grid.header.Container JavaScript class.

	 Example

	 //Old
	 GridPanel1.getColumnModel().columns

	 //New
	 var headerCt = App.GridPanel1.headerCt,
		 columns = headerCt.getGridColumns();

172. The ColumnModel's HiddenChange event has been removed. Please use its ColumnHide and ColumnShow events. 
	 Also you can listen the Hide and Show event of a Column itself.

	 The ColumnModel's ColumnMoved event has been renamed to ColumnMove.

173. The Store's getSortState client side method has been removed. Please use its sorters property, it is a MixedCollection instance.

174. The FormPanel's FormID property has been removed. It is not required anymore since a FormPanel doesn't render a form HTML element anymore.
	 It creates a form element only if needed. To refer a FormPanel, for example, in a DirectEvent's FormID, please use a FormPanel's ID.

175. The MultiSelect's Click and DblClick events have been removed. Please use the ItemClick and ItemDblClick of a MultiSelect's ListConfig.

176. The Button's Type property has been removed. 

	 If you need an equivalent of Type="Submit", please set up a Button's AutoPostBask="true". It will do a PostBack on Button click.

	 There is no a direct equivalent of Type="Reset", but you can use a FormPanel and its reset functionality: 
	 App.FormPanel1.getForm().reset();

177. The ColumnBase's GroupRenderer has been removed. There is no a direct substitution. Please follow this link to review available options.
     http://forums.ext.net/showthread.php?20813#post112032

178. The GridPanel's drag&drop related properties have been removed: EnableDragDrop, DDGroup, DDText.

	 Configure a GridDragDrop plugin for a GridPanel's View.
	 http://examples.ext.net/#/DragDrop/Grid/Rows_Reordering/
	 http://docs.sencha.com/extjs/4.2.1/#!/api/Ext.grid.plugin.DragDrop


179. The KeyMap's StopEvent property has been removed. Please use the KeyMap's DefaultEventAction="StopEvent" option instead.

180. The GridPanelMaintainScrollPositionOnRefresh plugin has been removed. Instead please set up InvalidateScrollerOnRefresh="false" for a GridPanel.

181. The Group class (used by CalendarPanel) has been renamed to CalendarModel.
